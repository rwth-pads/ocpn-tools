.react-flow__attribution {
  display: none;
}
.react-flow__node{
  visibility: visible !important;
}

.place-node{
  border-radius: 50%;
  width: 20px; /* Further reduced size */
  height: 20px; /* Further reduced size */
  border-color: rgb(30 64 175);
  border-width: 1px; /* Reduced border thickness */
}
.place-node .token {
  width: 20px; /* Adjusted size */
}

.react-flow {
  /* Custom Variables */
  --xy-theme-selected: red;
  --xy-theme-hover: black;
  --xy-theme-edge-hover: black;
  --xy-theme-color-focus: #E8E8E8;

  /* Built-in Variables see https://reactflow.dev/learn/customization/theming */
  --xy-node-border-default: 1px solid #000;

  --xy-node-boxshadow-default: 
    0px 3.54px 4.55px 0px #00000005, 
    0px 3.54px 4.55px 0px #0000000D, 
    0px 0.51px 1.01px 0px #0000001A;

  --xy-node-border-radius-default: 0;

  --xy-handle-background-color-default: #ffffff;
  --xy-handle-border-color-default: #AAAAAA;

  --xy-edge-label-color-default: #505050;
}

.react-flow.dark { 
  --xy-node-boxshadow-default: 
  0px 3.54px 4.55px 0px rgba(255, 255, 255, 0.05), /* light shadow */
  0px 3.54px 4.55px 0px rgba(255, 255, 255, 0.13), /* medium shadow */
  0px 0.51px 1.01px 0px rgba(255, 255, 255, 0.2);  /* smallest shadow */  
  --xy-theme-color-focus: #535353;
}

/* Customizing Default Theming */

.react-flow__node {
  /* box-shadow: var(--xy-node-boxshadow-default); */
  border-radius: var(--xy-node-border-radius-default);
  /* background-color: var(--xy-node-background-color-default); */
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  font-size: 12px;
  flex-direction: column;
  /* border: var(--xy-node-border-default); */
  color: var(--xy-node-color, var(--xy-node-color-default));
}

.react-flow__node.selectable:focus {
  /* box-shadow: 0px 0px 0px 4px var(--xy-theme-color-focus); */
  border-color: #d9d9d9;
}

.react-flow__node.selectable:focus:active {
  /* box-shadow: var(--xy-node-boxshadow-default); */
}


.react-flow__node.selectable:hover, 
.react-flow__node.draggable:hover {
  border-color: var(--xy-theme-hover);
}

.react-flow__node.selectable.selected {
  /* border-color: var(--xy-theme-selected);
  box-shadow: var(--xy-node-boxshadow-default); */
}

.react-flow__node-group {
  background-color: rgba(207, 182, 255, 0.4);
  border-color: #9E86ED;
}

.react-flow__edge.selectable:hover .react-flow__edge-path,
.react-flow__edge.selectable.selected .react-flow__edge-path {
  stroke: var(--xy-theme-edge-hover);
}

.react-flow__handle {
  background-color: var(--xy-handle-background-color-default);
}

.react-flow__handle.connectionindicator:hover {
  pointer-events: all;
  border-color: var(--xy-theme-edge-hover);
  background-color: white;
}

.react-flow__handle.connectionindicator:focus , 
.react-flow__handle.connectingfrom,
.react-flow__handle.connectingto {
  border-color: var(--xy-theme-edge-hover);
}

.react-flow__node-resizer {
  border-radius: 0;
  border: none;
}

.react-flow__resize-control.handle {
  background-color: #ffffff;
  border-color: #9E86ED;
  border-radius: 0;
  width: 5px;
  height: 5px;
}

.react-flow__edge-path {
  fill: none;
  stroke: black; /* Ensure edges are visible */
  stroke-width: 1; /* Slightly thicker for better visibility */
  stroke-linecap: round; /* Smooth edge ends */
}
.react-flow__edge {
  marker-start: url(#marker-start); /* Add markers for better visibility */
  marker-end: url(#marker-end); /* Add markers for better visibility */
}

.edge-label-renderer__custom-edge {
  position: absolute;
  background-color: white;
  padding: 0 2px;
  font-size: 8px;
}
 
.react-flow__edge-textbg {
  fill: #f7f9fb;
}

.cpn-node{
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--xy-node-background-color-default);
}

.cpn-node label{
  /* font-weight: 500; */
  font-size: 7px; /* Reduced font size */
  position: absolute;
  /* bottom: -15px; Adjusted position */
  max-width: 100px; /* Adjusted width */
  overflow: hidden;
  white-space: nowrap;
  background-color: white;
  padding: 0 2px;
  font-size: 8px;
}

.transition-node {
  min-width: 15px;
  min-height: 30px;
  width: 100%;
  height: 100%;
  border: var(--xy-node-border-default);
}

.place-node {
  min-width: 30px;
  min-height: 30px;
  width: 100%;
  height: 100%;
  border-radius: calc(100% * (var(--current-width, 30) / var(--current-height, 30)));
  border: 1px solid;
}

.custom-handle {
  width: 100%;
  height: 100%;
  background: blue;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 0;
  transform: none;
  border: none;
  opacity: 0;
}
